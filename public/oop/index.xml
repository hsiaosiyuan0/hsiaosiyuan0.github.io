<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oops on hsiaosiyuan</title>
    <link>http://example.org/oop/</link>
    <description>Recent content in Oops on hsiaosiyuan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Aug 2019 00:00:00 +0800</lastBuildDate><atom:link href="http://example.org/oop/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>midway 分析</title>
      <link>http://example.org/oop/ioc/</link>
      <pubDate>Sun, 18 Aug 2019 00:00:00 +0800</pubDate>
      
      <guid>http://example.org/oop/ioc/</guid>
      <description>midway 分析 按目前项目主页的描述，当前默认分支是 serverless，该分支主要提供跨平台的 Serverless 能力，这部分工作是在原有的全栈框架的基础上，抽象不同 Serverless 平台的差异，对外提供相对一致的 Serverless 接口
原有的全栈框架实现在 master 分支，接下来将主要分析 master 分支的内容
master 分支中的 README 概况了自身的功能：
 Midway is a Node.js Web framework written by typescript, which uses the IoC injection mechanism to decouple the business logic of the application and make the development of large Node.js application easier and more natural.
 主要特点为：
 使用 TypeScript 编写 实现了 IoC 设计理念，方便模块间的解耦 基于 “框架的框架” egg 做了一些调整  目录结构 使用注解控制路由 controller 和 service 测试方式   脚手架以及编辑器增强  按照上面罗列的功能点，应该只有 IoC 是一个比较新的概念，除了 IoC 应该都是和 mug 重叠的功能。所以下面将讨论一下 midway 的 IoC 实现</description>
    </item>
    
  </channel>
</rss>
