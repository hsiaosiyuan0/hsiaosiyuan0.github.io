{"code":200,"data":{"post":{"filename":"最好的博客工具","rawMeta":{"title":"最好的博客工具"},"content":"# 最好的博客工具\n\n使用 Markdown 来作为博客的原始格式已经成为共识，随之而来出现了很多的静态站点生成工具，再搭配 [Github Pages](https://pages.github.com/)，没有比这样的组合更好的方式了\n\n于是问题聚焦在静态站点生成工具的选择上，比较出名的有：\n\n- [docusaurus](https://docusaurus.io/docs/search)\n- [dumi](https://d.umijs.org/)\n- [hugo](https://gohugo.io/)\n\n如果你愿意花时间的话，可以找出若干这样的工具\n\n但呈现在你眼前的这个站点，则是经由 [gadget](https://github.com/hsiaosiyuan0/gadget) 生成\n\ngadget 是我精心制作的静态站点生成工具，它的功能包括：\n\n- 即时预览\n- 自定义主题\n- 默认 SSG（Static Site Generation）\n- Sitemap\n- [DocSearch](https://docsearch.algolia.com/)\n- ...\n\n这些功能开箱即用，不需要配置。不像是 dumi 还得手动开启 SSG 和 Sitemap\n\n在编写 gadget 之前、完成 gadget 之后，甚至一个小时之前，我都产生过切换到其他开源工具的邪恶想法。这中间我也尝试了不下于 5、6 个工具，但最后发现还是 gadget 更顺手\n\n其实制作 gadget 这样的工具毫无难点，无非一些小工具的堆砌：\n\n- react\n- [ReactDOMServer](https://reactjs.org/docs/react-dom-server.html)\n- [remark](https://github.com/remarkjs/remark)\n- [react-remark](https://github.com/remarkjs/react-remark) 用于实现 [mdx](https://mdxjs.com/)\n- [webpack](https://webpack.js.org/) 堆一些插件\n- ...\n\n所有诸如 docusaurus 这样的开源工具，不论出名与否、无出其右\n\n使用 gadget 我可以制作自己满意的主题，使用 [OneDark Pro](https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme) 来作为代码高亮的着色方案，甚至调整 gadget 内部的功能，只要我愿意，我可以随时调整每一个角落，把它们设置成我喜欢的样子\n\n就在刚刚，我给它加上了 DocSearch\n\n我暂时并没补充 gadget 文档的打算，因为我可以像阅读文档一样阅读它的代码。我并非在说 gadget 的代码有多好，只是我编写了它的每一行每一个缩进罢了\n\n我当然也不想向你推荐 gadget，因为它很可能并不适合你。但我想你既然能够看到这篇博客，想必是你我之前存在奇妙的缘分，是时候考虑实现一个自己的 gadget 来写博客了\n","slug":"/scratch/最好的博客工具","toc":[],"keywords":[],"mtime":1666205248983},"catalog":[{"name":"v8","url":"/post/v8","children":[{"name":"在 VSCode 中调试 v8 源码","url":"/post/v8/debug-v8-in-vscode.html","children":[]},{"name":"v8 常见数据类型","url":"/post/v8/common-data-types.html","children":[]}]},{"name":"deno","url":"/post/deno","children":[{"name":"deno native plugin 内部实现机制","url":"/post/deno/native-plugin.html","children":[]}]},{"name":"crypto","url":"/post/crypto","children":[{"name":"加密算法调研","url":"/post/crypto/brief-crypto.html","children":[]}]},{"name":"nodejs","url":"/post/nodejs","children":[{"name":"Cluster 模块分析","url":"/post/nodejs/Cluster 模块分析.html","children":[]},{"name":"从源码构建 node.js","url":"/post/nodejs/build-from-source.html","children":[]},{"name":"Node.js 扩展","url":"/post/nodejs/node-addon.html","children":[]},{"name":"Node 源码中的常见代码","url":"/post/nodejs/common-snippet.html","children":[]},{"name":"v8 Heapsnapshot 文件解析","url":"/post/nodejs/heap-snapshot.html","children":[]},{"name":"Libuv 之 - 只看这篇是不够的","url":"/post/nodejs/libuv.html","children":[]},{"name":"Objects in V8","url":"/post/nodejs/object-in-v8.html","children":[]},{"name":"Libuv 之上的 Node","url":"/post/nodejs/node-on-libuv.html","children":[]}]},{"name":"websocket","url":"/post/websocket","children":[{"name":"WebSocket 协议 1~4 节","url":"/post/websocket/WebSocket 协议 1~4 节.html","children":[]},{"name":"WebSocket 协议 5~10 节","url":"/post/websocket/WebSocket 协议 5~10 节.html","children":[]}]},{"name":"assembly","url":"/post/assembly","children":[{"name":"汇编语言学习小结","url":"/post/assembly/汇编语言学习小结.html","children":[]}]},{"name":"typescript","url":"/post/typescript","children":[{"name":"Decorator in babel and tsc","url":"/post/typescript/decorator.html","children":[]}]},{"name":"rust","url":"/post/rust","children":[{"name":"Lifetime","url":"/post/rust/lifetime.html","children":[]}]},{"name":"oop","url":"/post/oop","children":[{"name":"Midway 分析","url":"/post/oop/ioc.html","children":[]}]},{"name":"php","url":"/post/php","children":[{"name":"为什么 PHP 不适合长时间运行","url":"/post/php/为什么 PHP 不适合长时间运行.html","children":[]}]},{"name":"blockchain","url":"/post/blockchain","children":[{"name":"Crypto-conditions 简述","url":"/post/blockchain/crypto-conditions 简述.html","children":[]},{"name":"实用拜占庭容错简介","url":"/post/blockchain/实用拜占庭容错简介.html","children":[]}]},{"name":"browser","url":"/post/browser","children":[{"name":"浏览器异步加载和同源策略","url":"/post/browser/浏览器异步加载和同源策略.html","children":[]}]},{"name":"cpp","url":"/post/cpp","children":[{"name":"The as-if rule","url":"/post/cpp/the-as-if-rule.html","children":[]}]},{"name":"work","url":"/post/work","children":[{"name":"Parsing in practice","url":"/post/work/parsing-in-practice.html","children":[]}]},{"name":"os","url":"/post/os","children":[{"name":"大小端序","url":"/post/os/大小端序.html","children":[]},{"name":"UTF-8 编码及检查其完整性","url":"/post/os/UTF-8 编码及检查其完整性.html","children":[]},{"name":"魔数 0x7c00","url":"/post/os/魔数0x7c00.html","children":[]},{"name":"字符集和字符编码","url":"/post/os/字符集和字符编码.html","children":[]}]},{"name":"javascript","url":"/post/javascript","children":[{"name":"Generator Function","url":"/post/javascript/generator function.html","children":[]},{"name":"解析 JSON 的成本","url":"/post/javascript/解析 JSON 的成本.html","children":[]},{"name":"Javascript 内部的字符编码","url":"/post/javascript/Javascript 内部的字符编码.html","children":[]},{"name":"闭包的作用","url":"/post/javascript/闭包的作用.html","children":[]},{"name":"闭包是什么","url":"/post/javascript/闭包是什么.html","children":[]}]},{"name":"static-analysis","url":"/post/static-analysis","children":[{"name":"使用 Rust 重写 ternjs","url":"/post/static-analysis/ternjs.html","children":[]}]},{"name":"craft","url":"/post/craft","children":[{"name":"制作一个属于自己的语言","url":"/post/craft/create_your_own_lang.html","children":[]}]},{"name":"go","url":"/post/go","children":[{"name":"Go 语言中的 Generic 设计缺陷","url":"/post/go/bad_in_generic_syntax.html","children":[]}]},{"name":"scratch","url":"/post/scratch","children":[{"name":"初唐四杰","url":"/post/scratch/初唐四杰.html","children":[]},{"name":"最好的博客工具","url":"/post/scratch/最好的博客工具.html","children":[]}]}],"title":"The hard ways"}}