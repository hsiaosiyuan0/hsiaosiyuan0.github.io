{"code":200,"data":{"post":{"filename":"大小端序","rawMeta":{"title":"大小端序"},"content":"# 大小端序\n\n> 大端模式，是指数据的高字节保存在内存的低地址中，而数据的低字节保存在内存的高地址中，这样的存储模式有点儿类似于把数据当作字符串顺序处理：地址由小向大增加，而数据从高位往低位放；\n\n> 小端模式，是指数据的高字节保存在内存的高地址中，而数据的低字节保存在内存的低地址中，这种存储模式将地址的高低和数据位权有效地结合起来，高地址部分权值高，低地址部分权值低，和我们的逻辑方法一致。\n\n比如现在有一块四个字节的内存，并且地址是从左往右递增的。为了方便，都置为 0\n\n```\n1000:1000 00 00 00 00\n```\n\n现有一个十六进制数 `0x12345678`，这个十六进制数刚好可以使用上面的那块内存去存放，因为它们都是 32bits。\n\n## 大端序\n\n如果是大端序，内存表现将会是这样\n\n```\n1000:1000 12 34 56 78\n```\n\n可以发现，`12` 是原十六进制数 `0x12345678`的高位，而这个 `12` 放在上面那块内存地址的最低单元中（因为前面说了，这块内存地址是从左往右递增的，所以左边是相对低位，右边是相对高位）。这就是这段话的意思\n\n> 大端模式，是指数据的高字节保存在内存的低地址中，而数据的低字节保存在内存的高地址中\n\n## 小端序\n\n如果是小端序，内存表现是这样的\n\n```\n1000:1000 78 56 34 12\n```\n\n可以发现，`78` 是原十六进制数 `0x12345678`的低位，而此时它也放在了最低的内存单元中，这就是这段话的意思\n\n> 小端模式，是指数据的高字节保存在内存的高地址中，而数据的低字节保存在内存的低地址中\n\n另外，可以发现，大小端序对字节内容是没有影响的，`12`还是 `12` 并没有变成 `21`\n\n另外，对于类似下面情形，一般为内存或者文件 dump 工具的输出内容，通常的阅读顺序是，从左往右、从上到下:\n\n```\n0AEC:0000  CD 20 FF 9F 00 9A EE FE-1D F0 4F 03 50 05 8A 03\n0AEC:0010  50 05 17 03 50 05 16 04-01 01 01 00 02 FF FF FF\n0AEC:0020  FF FF FF FF FF FF FF FF-FF FF FF FF 06 05 4E 01\n0AEC:0030  10 0A 14 00 18 00 EC 0A-FF FF FF FF 00 00 00 00\n0AEC:0040  05 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00\n0AEC:0050  CD 21 CB 00 00 00 00 00-00 00 00 00 00 20 20 20\n0AEC:0060  20 20 20 20 20 20 20 20-00 00 00 00 00 20 20 20\n0AEC:0070  20 20 20 20 20 20 20 20-00 00 00 00 00 00 00 00\n```\n\n## 8086 端序\n\n如何知道当前的 8086 是大端序还是小端序，可以使用下面的汇编代码测试\n\n```\n; 设置 data segment 的段地址\nmov ax, 1000\nmov ds, ax\n\n; 一次将一个字的数据 0001h 写入数据段的第一个单元开始的一个字的内存中\n; 一个字占用 2 个字节，那么如果是大端序，内存中应该是 00 01\n; 如果是小端序，内存中就会使 01 00\nmov ax, 1h\nmov [0], ax\n\n; 先将 bx 置 0，便于下面的查看\nsub bx, bx\n\n; 将数据段中的第一个内存单元的内容放置到 bl 中，因为 bl 是 8 位的，所以这样可以\n; 达到只获取第一个字节的目的，现在可以查看寄存器 bx 的值，如果它是 0001，则说明\n; 内存中的数据是 01 00 这样的格式，则设备是小端序的，反之亦然\nmov bl, [0]\n```\n","slug":"/os/大小端序","toc":[{"name":"大端序","depth":2,"anchor":"#大端序","children":[]},{"name":"小端序","depth":2,"anchor":"#小端序","children":[]},{"name":"8086 端序","depth":2,"anchor":"#8086端序","children":[]}],"keywords":[],"mtime":1666192656325},"catalog":[{"name":"v8","url":"/post/v8","children":[{"name":"在 VSCode 中调试 v8 源码","url":"/post/v8/debug-v8-in-vscode.html","children":[]},{"name":"v8 常见数据类型","url":"/post/v8/common-data-types.html","children":[]}]},{"name":"deno","url":"/post/deno","children":[{"name":"deno native plugin 内部实现机制","url":"/post/deno/native-plugin.html","children":[]}]},{"name":"crypto","url":"/post/crypto","children":[{"name":"加密算法调研","url":"/post/crypto/brief-crypto.html","children":[]}]},{"name":"nodejs","url":"/post/nodejs","children":[{"name":"Cluster 模块分析","url":"/post/nodejs/Cluster 模块分析.html","children":[]},{"name":"从源码构建 node.js","url":"/post/nodejs/build-from-source.html","children":[]},{"name":"Node.js 扩展","url":"/post/nodejs/node-addon.html","children":[]},{"name":"Node 源码中的常见代码","url":"/post/nodejs/common-snippet.html","children":[]},{"name":"v8 Heapsnapshot 文件解析","url":"/post/nodejs/heap-snapshot.html","children":[]},{"name":"Libuv 之 - 只看这篇是不够的","url":"/post/nodejs/libuv.html","children":[]},{"name":"Objects in V8","url":"/post/nodejs/object-in-v8.html","children":[]},{"name":"Libuv 之上的 Node","url":"/post/nodejs/node-on-libuv.html","children":[]}]},{"name":"websocket","url":"/post/websocket","children":[{"name":"WebSocket 协议 1~4 节","url":"/post/websocket/WebSocket 协议 1~4 节.html","children":[]},{"name":"WebSocket 协议 5~10 节","url":"/post/websocket/WebSocket 协议 5~10 节.html","children":[]}]},{"name":"assembly","url":"/post/assembly","children":[{"name":"汇编语言学习小结","url":"/post/assembly/汇编语言学习小结.html","children":[]}]},{"name":"typescript","url":"/post/typescript","children":[{"name":"Decorator in babel and tsc","url":"/post/typescript/decorator.html","children":[]}]},{"name":"rust","url":"/post/rust","children":[{"name":"Lifetime","url":"/post/rust/lifetime.html","children":[]}]},{"name":"oop","url":"/post/oop","children":[{"name":"Midway 分析","url":"/post/oop/ioc.html","children":[]}]},{"name":"php","url":"/post/php","children":[{"name":"为什么 PHP 不适合长时间运行","url":"/post/php/为什么 PHP 不适合长时间运行.html","children":[]}]},{"name":"blockchain","url":"/post/blockchain","children":[{"name":"Crypto-conditions 简述","url":"/post/blockchain/crypto-conditions 简述.html","children":[]},{"name":"实用拜占庭容错简介","url":"/post/blockchain/实用拜占庭容错简介.html","children":[]}]},{"name":"browser","url":"/post/browser","children":[{"name":"浏览器异步加载和同源策略","url":"/post/browser/浏览器异步加载和同源策略.html","children":[]}]},{"name":"cpp","url":"/post/cpp","children":[{"name":"The as-if rule","url":"/post/cpp/the-as-if-rule.html","children":[]}]},{"name":"work","url":"/post/work","children":[{"name":"Parsing in practice","url":"/post/work/parsing-in-practice.html","children":[]}]},{"name":"os","url":"/post/os","children":[{"name":"大小端序","url":"/post/os/大小端序.html","children":[]},{"name":"UTF-8 编码及检查其完整性","url":"/post/os/UTF-8 编码及检查其完整性.html","children":[]},{"name":"魔数 0x7c00","url":"/post/os/魔数0x7c00.html","children":[]},{"name":"字符集和字符编码","url":"/post/os/字符集和字符编码.html","children":[]}]},{"name":"javascript","url":"/post/javascript","children":[{"name":"Generator Function","url":"/post/javascript/generator function.html","children":[]},{"name":"解析 JSON 的成本","url":"/post/javascript/解析 JSON 的成本.html","children":[]},{"name":"Javascript 内部的字符编码","url":"/post/javascript/Javascript 内部的字符编码.html","children":[]},{"name":"闭包的作用","url":"/post/javascript/闭包的作用.html","children":[]},{"name":"闭包是什么","url":"/post/javascript/闭包是什么.html","children":[]}]},{"name":"static-analysis","url":"/post/static-analysis","children":[{"name":"使用 Rust 重写 ternjs","url":"/post/static-analysis/ternjs.html","children":[]}]},{"name":"craft","url":"/post/craft","children":[{"name":"制作一个属于自己的语言","url":"/post/craft/create_your_own_lang.html","children":[]}]},{"name":"go","url":"/post/go","children":[{"name":"Go 语言中的 Generic 设计缺陷","url":"/post/go/bad_in_generic_syntax.html","children":[]}]},{"name":"scratch","url":"/post/scratch","children":[{"name":"初唐四杰","url":"/post/scratch/初唐四杰.html","children":[]},{"name":"最好的博客工具","url":"/post/scratch/最好的博客工具.html","children":[]}]}],"title":"The hard ways"}}